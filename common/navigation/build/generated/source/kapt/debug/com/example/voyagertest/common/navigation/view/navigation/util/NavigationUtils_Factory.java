// Generated by Dagger (https://dagger.dev).
package com.example.voyagertest.common.navigation.view.navigation.util;

import com.example.voyagertest.common.navigation.view.navigation.FeatureNavigationTarget;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import java.util.Set;
import javax.inject.Provider;

@ScopeMetadata("dagger.hilt.android.scopes.ActivityRetainedScoped")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NavigationUtils_Factory implements Factory<NavigationUtils> {
  private final Provider<Set<FeatureNavigationTarget>> featureNavigationTargetsProvider;

  public NavigationUtils_Factory(
      Provider<Set<FeatureNavigationTarget>> featureNavigationTargetsProvider) {
    this.featureNavigationTargetsProvider = featureNavigationTargetsProvider;
  }

  @Override
  public NavigationUtils get() {
    return newInstance(featureNavigationTargetsProvider.get());
  }

  public static NavigationUtils_Factory create(
      Provider<Set<FeatureNavigationTarget>> featureNavigationTargetsProvider) {
    return new NavigationUtils_Factory(featureNavigationTargetsProvider);
  }

  public static NavigationUtils newInstance(Set<FeatureNavigationTarget> featureNavigationTargets) {
    return new NavigationUtils(featureNavigationTargets);
  }
}
