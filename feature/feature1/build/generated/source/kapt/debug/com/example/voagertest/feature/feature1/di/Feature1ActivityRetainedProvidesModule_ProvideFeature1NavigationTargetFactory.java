// Generated by Dagger (https://dagger.dev).
package com.example.voagertest.feature.feature1.di;

import com.example.voagertest.feature.feature1.view.navigation.Feature1NavigationTarget;
import com.example.voyagertest.common.navigation.view.navigation.NavigationTarget;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Feature1ActivityRetainedProvidesModule_ProvideFeature1NavigationTargetFactory implements Factory<NavigationTarget> {
  private final Feature1ActivityRetainedProvidesModule module;

  private final Provider<Feature1NavigationTarget> feature1NavigationTargetProvider;

  public Feature1ActivityRetainedProvidesModule_ProvideFeature1NavigationTargetFactory(
      Feature1ActivityRetainedProvidesModule module,
      Provider<Feature1NavigationTarget> feature1NavigationTargetProvider) {
    this.module = module;
    this.feature1NavigationTargetProvider = feature1NavigationTargetProvider;
  }

  @Override
  public NavigationTarget get() {
    return provideFeature1NavigationTarget(module, feature1NavigationTargetProvider.get());
  }

  public static Feature1ActivityRetainedProvidesModule_ProvideFeature1NavigationTargetFactory create(
      Feature1ActivityRetainedProvidesModule module,
      Provider<Feature1NavigationTarget> feature1NavigationTargetProvider) {
    return new Feature1ActivityRetainedProvidesModule_ProvideFeature1NavigationTargetFactory(module, feature1NavigationTargetProvider);
  }

  public static NavigationTarget provideFeature1NavigationTarget(
      Feature1ActivityRetainedProvidesModule instance,
      Feature1NavigationTarget feature1NavigationTarget) {
    return Preconditions.checkNotNullFromProvides(instance.provideFeature1NavigationTarget(feature1NavigationTarget));
  }
}
